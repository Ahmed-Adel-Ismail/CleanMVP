def base = [
        directory   : System.getenv("LAST_MILE_BASE"),
        abstraction : "BaseAbstraction",
        entities    : "BaseEntities",
        useCases    : "BaseUseCases",
        presentation: "BasePresentation"
]

def customer = [
        directory: System.getenv("LAST_MILE_CUSTOMER"),
        entities : "LMCustomerEntities",
        app      : "LMCustomerApp"
]


def driver = [
        directory: System.getenv("LAST_MILE_DRIVER"),
        entities : "LMDriverEntities",
        app      : "LMDriverApp"
]

def baseAbstraction = name(base.abstraction)
def baseEntities = name(base.entities)
def baseUseCases = name(base.useCases)
def basePresentation = name(base.presentation)
def customerEntities = name(customer.entities)
def customerApp = name(customer.app)
def driverEntities = name(driver.entities)
def driverApp = name(driver.app)



include baseAbstraction, baseEntities, baseUseCases, basePresentation
include customerEntities, customerApp
include driverEntities, driverApp


project(baseAbstraction).path = path(base.directory, base.abstraction)
project(baseEntities).path = path(base.directory, base.entities)
project(baseUseCases).path = path(base.directory, base.useCases)
project(basePresentation).path = path(base.directory, base.presentation)
project(customerEntities).path = path(customer.directory, customer.entities)
project(customerApp).path = path(customer.directory, customer.app)
project(driverEntities).path = path(driver.directory, driver.entities)
project(driverApp).path = path(driver.directory, driver.app)


def name(project) {
    return ":" + project
}

def path(directory, project) {
    return new org.gradle.util.Path(directory + "/" + project)
}
