apply plugin: 'com.android.application'
apply plugin: 'android-apt'

// scala :
//apply plugin: "jp.leafytree.android-scala"


repositories {
    maven {
        url 'https://dl.bintray.com/bonnguyen/maven'
        maven { url "https://jitpack.io" }
// scala :
//        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
    }
}

ext.tag = ""

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.1"

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 25
        multiDexEnabled true
        versionCode 6
        versionName "0.0.4.10-D"
        tag = versionName;

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    aaptOptions {
        cruncherEnabled = false
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/rxjava.properties'
    }

    dexOptions {
        preDexLibraries = false
        jumboMode = true;
        javaMaxHeapSize "4g"
    }

    afterEvaluate {
        tasks.matching {
            it.name.startsWith('dex')
        }.each { dx ->
            if (dx.additionalParameters == null) {
                dx.additionalParameters = ['--multi-dex']
            } else {
                dx.additionalParameters += '--multi-dex'
            }
        }
    }

    useLibrary 'org.apache.http.legacy'

}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'

    apt 'com.jakewharton:butterknife-compiler:8.4.0'

    compile project(':BasePresentation')
    compile project(':LMDriverEntities')

    compile 'com.google.android.gms:play-services-maps:10.0.1'
    compile 'es.guiguegon:gallerymodule:1.3.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.squareup.okhttp:okhttp:2.2.0'
    compile 'com.squareup.okhttp:okhttp-urlconnection:2.2.0'
    compile 'com.mapzen:mapzen-android-sdk:1.2.1'

// scala :
//    compile 'org.scala-lang:scala-library:2.11.7'


}

// Configuration for scala compiler options as follows
tasks.withType(ScalaCompile) {
    // If you want to use scala compile daemon
    scalaCompileOptions.useCompileDaemon = true
    // Suppress deprecation warnings : false
    scalaCompileOptions.deprecation = true
    // Additional parameters
    scalaCompileOptions.additionalParameters = ["-feature"]
}

import org.ajoberstar.gradle.git.tasks.GitPush
import org.ajoberstar.gradle.git.tasks.GitTag


task createTag(type: GitTag) {
    repoPath = System.getenv("LAST_MILE_DRIVER")
    tagName = tag
    message = "Application build LMDriverApp"
}

task pushTag(type: GitPush, dependsOn: createTag) {
    namesOrSpecs = [tag]
}


apply plugin: 'com.google.gms.google-services'







